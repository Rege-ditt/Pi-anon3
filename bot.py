import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes, ConversationHandler
import asyncio
from flask import Flask, request

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.DEBUG
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω —Ç–∞ ID
TOKEN = "7903591351:AAH9zNPCwh4eTXMuMWQa1T0EwV5xgemwjds"
ADMIN_ID = 6085114476

# –î–ª—è —Ä–æ–±–æ—Ç–∏ –Ω–∞ Render
PORT = int(os.environ.get('PORT', 8080))
WEBHOOK_URL = os.environ.get('WEBHOOK_URL', 'https://your-app-name.onrender.com')

# –°—Ç–∞–Ω–∏ –¥–ª—è ConversationHandler
AWAITING_MESSAGE = 0
AWAITING_REPLY = 1

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_data = {}
# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ª–∞–Ω—Ü—é–∂–∫—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
messages_data = {}

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞
print(f"–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º: {TOKEN[:5]}...{TOKEN[-5:]}")
print(f"ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {ADMIN_ID}")

# –°—Ç–≤–æ—Ä—é—î–º–æ Flask –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ –¥–ª—è –≤–µ–±—Ö—É–∫—É
flask_app = Flask(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ—á–∞—Ç–∫–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞."""
    user = update.effective_user
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_data[user.id] = {
        'username': user.username,
        'first_name': user.first_name,
        'last_name': user.last_name
    }
    
    user_info = f"ID: {user.id}, –Ü–º'—è: {user.first_name}, –ü—Ä—ñ–∑–≤–∏—â–µ: {user.last_name or '–ù–µ–º–∞—î'}, –Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username or '–ù–µ–º–∞—î'}"
    
    # –õ–æ–≥—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    logger.info(f"–°–¢–ê–†–¢: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_info} –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")
    print(f"–°–¢–ê–†–¢: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_info} –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞")
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
    await update.message.reply_text(
        "–í—ñ—Ç–∞—é! –¶–µ –±–æ—Ç –¥–ª—è –∞–Ω–æ–Ω—ñ–º–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—åüëÄ.\n\n"
        "‚ñëüéâ–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç, —ñ —è –ø–µ—Ä–µ—à–ª—é –π–æ–≥–æ –∞–Ω–æ–Ω—ñ–º–Ω–æüéâ‚ñë.\n\n"
        "–¢–µ–ø–µ—Ä –≤–∏ —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –∞–Ω–æ–Ω—ñ–º–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—ñ –æ—Ç—Ä–∏–º—É—î—Ç–µ."
    )
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    try:
        await context.bot.send_message(
            chat_id=ADMIN_ID,
            text=f"‚ö†Ô∏è –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ—á–∞–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–æ—Ç–∞:\n{user_info}"
        )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")
        print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

async def get_message_id():
    """–ì–µ–Ω–µ—Ä—É—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."""
    return f"msg_{len(messages_data) + 1}"

async def receive_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤."""
    user = update.effective_user
    message_text = update.message.text
    
    # –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –≤–æ–Ω–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—è
    if user.id not in user_data:
        user_data[user.id] = {}
    
    user_data[user.id].update({
        'username': user.username,
        'first_name': user.first_name,
        'last_name': user.last_name,
        'last_message': message_text
    })
    
    user_info = f"ID: {user.id}, –Ü–º'—è: {user.first_name}, –ü—Ä—ñ–∑–≤–∏—â–µ: {user.last_name or '–ù–µ–º–∞—î'}, –Æ–∑–µ—Ä–Ω–µ–π–º: @{user.username or '–ù–µ–º–∞—î'}"
    
    # –õ–æ–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    logger.info(f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø: –í—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_info}\n–¢–µ–∫—Å—Ç: {message_text}")
    print(f"–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø: –í—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_info}\n–¢–µ–∫—Å—Ç: {message_text}")
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ ID –¥–ª—è —Ü—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    message_id = await get_message_id()
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    messages_data[message_id] = {
        'sender_id': user.id,
        'text': message_text,
        'timestamp': update.message.date
    }
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è
    await update.message.reply_text(
        "‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ —ñ –±—É–¥–µ –∞–Ω–æ–Ω—ñ–º–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ."
    )
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    keyboard = [
        [InlineKeyboardButton("–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data=f"reply_{message_id}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –ü–µ—Ä–µ—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É —Ç–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    try:
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É (–∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ)
        if ADMIN_ID != user.id:  # –ù–µ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∞–¥–º—ñ–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ–±–µ
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üì¨ –ù–æ–≤–µ –∞–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è!\n\n"
                    f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ (–∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ):\n{user_info}"
            )
            
            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üìù –¢–µ–∫—Å—Ç –∞–Ω–æ–Ω—ñ–º–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n\n{message_text}",
                reply_markup=reply_markup
            )
        
        # –í–∏–±–∏—Ä–∞—î–º–æ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        # –¢—É—Ç –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –∞–¥—Ä–µ—Å–∞—Ü—ñ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        # –ó–∞—Ä–∞–∑ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –π–¥—É—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É
        recipient_id = ADMIN_ID
        
        # –Ø–∫—â–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫ - –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä, –≤–∏–±–∏—Ä–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        if user.id == ADMIN_ID:
            # –ó–Ω–∞–π–¥–µ–º–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            last_active_users = [uid for uid in user_data.keys() if uid != ADMIN_ID]
            if last_active_users:
                recipient_id = last_active_users[-1]  # –ë–µ—Ä–µ–º–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ—Ç—Ä–∏–º—É–≤–∞—á—É (—è–∫—â–æ —Ü–µ –Ω–µ —Ç–æ–π —Å–∞–º–∏–π –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫)
        if recipient_id != user.id:
            await context.bot.send_message(
                chat_id=recipient_id,
                text=f"üìù –û—Ç—Ä–∏–º–∞–Ω–æ –∞–Ω–æ–Ω—ñ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n\n{message_text}",
                reply_markup=reply_markup
            )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        
        # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
        await update.message.reply_text(
            "‚ö†Ô∏è –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ."
        )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫."""
    query = update.callback_query
    await query.answer()  # –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback_query
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–Ω–æ–ø–∫–∏
    data = query.data
    user = update.effective_user
    
    # –Ø–∫—â–æ —Ü–µ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    if data.startswith("reply_"):
        message_id = data.split("_")[1]
        
        if message_id not in messages_data:
            await query.edit_message_text("‚ö†Ô∏è –¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—ñ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ.")
            return ConversationHandler.END
        
        # –ó–∞–ø–∞–º'—è—Ç–æ–≤—É—î–º–æ, –Ω–∞ —è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ
        context.user_data["reply_to_msg"] = message_id
        
        # –ó–∞–ø–∏—Ç—É—î–º–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        await query.edit_message_text(
            text=f"üí¨ –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –∞–Ω–æ–Ω—ñ–º–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:\n\n"
                 f"–ù–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {messages_data[message_id]['text'][:50]}..."
        )
        
        return AWAITING_REPLY
    
    return ConversationHandler.END

async def process_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
    user = update.effective_user
    reply_text = update.message.text
    message_id = context.user_data.get("reply_to_msg")
    
    if not message_id or message_id not in messages_data:
        await update.message.reply_text("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏, –Ω–∞ —è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—Ç–µ.")
        return ConversationHandler.END
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ ID –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    original_sender_id = messages_data[message_id]['sender_id']
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ü—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å —è–∫ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    new_message_id = await get_message_id()
    messages_data[new_message_id] = {
        'sender_id': user.id,
        'text': reply_text,
        'in_reply_to': message_id,
        'timestamp': update.message.date
    }
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    keyboard = [
        [InlineKeyboardButton("–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∞–Ω–æ–Ω—ñ–º–Ω–æ", callback_data=f"reply_{new_message_id}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫—É –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    try:
        await context.bot.send_message(
            chat_id=original_sender_id,
            text=f"üì® –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n"
                 f"‚ñ∂Ô∏è –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {messages_data[message_id]['text'][:50]}...\n\n"
                 f"üìù –í—ñ–¥–ø–æ–≤—ñ–¥—å: {reply_text}",
            reply_markup=reply_markup
        )
        
        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        await update.message.reply_text(
            f"‚úÖ –í–∞—à—É –∞–Ω–æ–Ω—ñ–º–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ."
        )
        
        # –õ–æ–≥—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        logger.info(f"–í–Ü–î–ü–û–í–Ü–î–¨: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ID:{user.id} –≤—ñ–¥–ø–æ–≤—ñ–≤ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ID:{message_id}")
        print(f"–í–Ü–î–ü–û–í–Ü–î–¨: –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ID:{user.id} –≤—ñ–¥–ø–æ–≤—ñ–≤ –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ID:{message_id}")
        
        # –¢–∞–∫–æ–∂ –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∞–¥–º—ñ–Ω–∞ –ø—Ä–æ –Ω–æ–≤—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å (—è–∫—â–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫ –Ω–µ –∞–¥–º—ñ–Ω)
        if user.id != ADMIN_ID and original_sender_id != ADMIN_ID:
            user_info = f"ID: {user.id}"
            if user.id in user_data:
                user_info = f"ID: {user.id}, –Ü–º'—è: {user_data[user.id].get('first_name', '–ù–µ–º–∞—î')}, –Æ–∑–µ—Ä–Ω–µ–π–º: @{user_data[user.id].get('username', '–ù–µ–º–∞—î')}"
            
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üì¨ –ù–æ–≤–∞ –∞–Ω–æ–Ω—ñ–º–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å!\n\n"
                     f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞ (–∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ):\n{user_info}\n\n"
                     f"–ù–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {messages_data[message_id]['text'][:50]}...\n\n"
                     f"–¢–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {reply_text}",
                reply_markup=reply_markup
            )
    except Exception as e:
        logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {e}")
        print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {e}")
        await update.message.reply_text(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: {e}")
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–°–∫–∞—Å—É–≤–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ."""
    await update.message.reply_text("‚ùå –û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É."""
    help_text = (
        "üìå –ö–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞:\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –π–æ–≥–æ –∞–Ω–æ–Ω—ñ–º–Ω–æ.\n"
        "–í–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –∞–Ω–æ–Ω—ñ–º–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É '–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∞–Ω–æ–Ω—ñ–º–Ω–æ'."
    )
    
    # –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if update.effective_user.id == ADMIN_ID:
        help_text += (
            "\n\nüëë –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
            "–í–∏ –±–∞—á–∏—Ç–µ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤—Å—ñ—Ö –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫—ñ–≤."
        )
    
    await update.message.reply_text(help_text)

@flask_app.route(f'/{TOKEN}', methods=['POST'])
def webhook():
    """–û–±—Ä–æ–±–Ω–∏–∫ –≤–µ–±—Ö—É–∫—ñ–≤ –¥–ª—è Flask."""
    return 'OK'

@flask_app.route('/')
def index():
    """–ü—Ä–æ—Å—Ç–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —â–æ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î."""
    return '–ë–æ—Ç –ø—Ä–∞—Ü—é—î!'

def main() -> None:
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –±–æ—Ç–∞."""
    print("–ë–æ—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏ –≤ —Ä–µ–∂–∏–º—ñ webhook. –ß–µ–∫–∞—î–º–æ –≤–µ–±—Ö—É–∫–∏...")
    
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
    application = Application.builder().token(TOKEN).build()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ ConversationHandler –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_callback)],
        states={
            AWAITING_REPLY: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_reply)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
        per_message=True,
    )
    
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, receive_message))
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook
    print(f"–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –Ω–∞ {WEBHOOK_URL}/{TOKEN}")
    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=f"{WEBHOOK_URL}/{TOKEN}"
    )

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º—ñ webhook —á–µ—Ä–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø–µ—Ç–ª—é
    from threading import Thread
    
    def run_flask():
        flask_app.run(host='0.0.0.0', port=PORT)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ Flask —É –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    flask_thread = Thread(target=run_flask)
    flask_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    main()
